<?xml version="1.0"?>
<!DOCTYPE document SYSTEM "./dtd/document-v10.dtd">

<!-- ========================================================================= -->
<!-- Copyright (C) The Apache Software Foundation. All rights reserved.        -->
<!--                                                                           -->
<!-- This software is published under the terms of the Apache Software License -->
<!-- version 1.1, a copy of which has been included with this distribution in  -->
<!-- the LICENSE file.                                                         -->
<!-- ========================================================================= -->

<!-- ========================================================================= -->
<!-- author vincent.hardy@eng.sun.com                                          -->
<!-- version $Id$ -->
<!-- ========================================================================= -->
<document>
    <header>
        <title>Batik SVG Toolkit</title>
        <subtitle>SVG Tools in Java</subtitle>
        <authors>
            <person name="Vincent Hardy" email="vincent.hardy@eng.sun.com"/>
            <person name="Thierry Kormann" email="tkormann@apache.org"/>
            <person name="Stephane Hillion" email="stephane@hillion.org"/>
        </authors>
    </header>

    <body>
        <s1 title="Batik Overview">
        <figure src="images/splash.png" alt="Batik release 1.1 is coming" />

        <p>
        Batik is a Java(tm) technology based toolkit for applications that want 
        to use images in the <link href="http://www.w3.org/TR/SVG/">Scalable Vector
        Graphics (SVG)</link> format for various purposes, such as
        viewing, generation or manipulation.
        </p>

        <p>
        The project's ambition is to give developers a set of core 
        modules which can be used together or individually to support 
        specific SVG solutions. Examples of modules are the SVG parsers, the SVG 
        generator and the SVG DOM implementation. Another ambition for 
        the Batik project is to make it highly extensible (for 
        example, Batik allows the developer to handle custom SVG 
        tags). Even though the goal of the project is to provide a 
        set of core modules, one of the deliverables is a full fledged 
        SVG browser implementation which validates the various modules 
        and their inter-operability. 
        </p>

        </s1>

        <s1 title="Applications of Batik">
        <p><img src="images/batikUses.jpg" alt="Batik use cases" />
        With Batik, you can manipulate SVG documents anywhere Java is
        available. You can also use the various Batik modules to
        generate, manipulate, transcode and search SVG images in your 
        applications.
        </p>
        <p>
        Batik makes it easy for Java based applications to deal with SVG
        content. For example, using Batik's SVG generator, a Java application
        can very easily export its graphics in the SVG format. Using 
        Batik's SVG processor and SVG Viewing component, an application can very easily
        integrate SVG viewing capabilities. Another possibility is to
        use Batik's modules to convert SVG to various formats, such as 
        raster images (JPEG or PNG).
        </p>
        <p>
        Batik provides core components for handling and processing SVG
        files. See <link href="#projectAndProductExamples">examples of projects and
        products using Batik</link> for real-life example of how Batik is
        already integrated in projects and products.
        </p>
         </s1>

        <s1 title="The SVG Specification">
        <p>
        Scalable Vector Graphics, SVG, is a <link href="http://www.w3.org">W3C</link>
        recommendation. It defines an XML grammar for rich 2D graphics
        which includes features such as transparency, arbitrary geometry, filter
        effects (shadows, lighting effects, etc...), scripting and animation.
        </p>
        <p>
        The SVG specification can be found on the 
        <link href="http://www.w3.org/TR/SVG/">W3C site</link>. Batik 1.1 is conformant
        with the final recommendation of September 4th, 2001.</p>
         </s1>

        <s1 title="Batik's Implementation Status">
        <p>
        At this time, Batik provides a good implementation for all the SVG static 
        features, supports linking, and has some scripting support, even though dynamic 
        modification of SVG documents is not yet available and animation is
        not supported.
        </p>
        <p>
        You will find a detailed description of the set of SVG features
        Batik supports on the 
        <link href="status.html">Status</link>
        page.
        </p>
        </s1>
 
        <s1 title="Download Batik">
        <p>
        You can get the Batik distribution (source and binary) on the 
        <link href="dist">download page</link>.
        </p>
        <note>
        All other libraries needed by Batik are included in the distribution.
        As a consequence the Batik archive is quite big, but
        after you downloaded it, you will not need anything else.
        </note>
        </s1>

        <anchor id="projectAndProductExamples" />
        <s1 title="Examples of projects and products using Batik">
        <p>While it is hard to track projects and products which are using Batik, here are a few
        ones which are known:</p>
        <ul>
        <li><link href="http://xml.apache.org/fop">The Apache FOP project</link> uses Batik to handle SVG images. It uses the SVG rasterizer and extends the Batik transcoder 
            architecture to offer SVG to PDF conversion.</li>
        <li><link href="http://xml.apache.org/cocoon">The Apache Cocoon project</link> uses Batik to rasterize SVG images. </li>
        <li><link href="http://www.ilog.com/products/jviews">ILOG's JViews</link> product uses and extends the Batik SVG export module. </li>
        <li><link href="http://otn.oracle.com/products/jdev/content.html">Oracle Corp.'s JDeveloper9i</link> uses Batik to export class diagrams in SVG. It uses the
        SVG export module (SVGGraphics2D).</li>
        <li><link href="http://www.optimalj.com">OptimalJ</link>, a UML Class Diagram Editor for NetBeans, uses Batik to export SVG. </li>
        <li><link href="http://www.togethersoft.com/products/controlcenter/whats_new.jsp">Together Control Center 5.5</link> uses Batik to export UML diagrams in SVG.</li>
        <li><link href="http://xweb.sf.net">XWeb</link>, a tool to create websites automatically out of XML input. Uses the Batik SVG Rasterizer.</li>
        <li><link href="http://www.elixirtech.com/ElixirReport">ElixirTech's ElixirReport</link> uses 
        Batik for charting and for its SVG component.</li>
        </ul>
        </s1>
    </body>
</document>
