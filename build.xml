
<!--


              A p a c h e   B a t i k   B u i l d   S y s t e m



Build Tools
..............................................................................

The Batik build system is based on Apache Ant, which is a Java building tool
used in Apache projects.
For more information refer to "http://jakarta.apache.org/ant/".

The distribution contains a precompiled version of Ant.

The only thing that you have to make sure, is the "JAVA_HOME" environment
property should be set to match the JVM you want to use. 


Building Instructions
..............................................................................

First, make sure your current working directory is where this file is located.
Then type:

  [unix]  ./build.sh compile
  [win32] .\build.bat compile

This action will compile the sources to the 'classes' directory.

You can now launch the SVG viewer by typing:

  [unix]  ./build.sh svgviewer
  [win32] .\build.bat svgviewer


Build Targets
..............................................................................

To display the available targets type:

  [unix]  ./build.sh  help
  [win32] .\build.bat help

 
 $Id$

-->

<project default="help" basedir=".">

  <!-- Initializations .................................................... -->
  <target name="init-args" unless="args">
    <property name="args" value="samples/tests/index.svg"/>
  </target>

  <target name="init" depends="init-args">
    <tstamp/>
    <property name="project" value="batik"/>
    <property name="year"    value="2000"/>

    <property name="src"             value="sources"/>
    <property name="dest"            value="classes"/>
    <property name="docs"            value="docs"/>
    <property name="class-prefix"    value="org.apache.${project}"/>

    <property name="xdocs"           value="xdocs"/>
    <property name="skins"           value="xdocs/skins"/>
    <property name="stylebook-class" value="org.apache.stylebook.StyleBook"/>

    <property name="site"            value="../xml-site/targets/${project}"/>
    <property name="site-skin"       value="${skins}/xml.apache.org/"/>

  </target>

  <path id="libs-classpath">
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
  </path>


  <!-- Help ............................................................... -->
  <target name       ="help"
          depends    ="init"
          description="Displays the usage">
    <echo message=""/>
    <echo message="${project} build file"/>
    <echo message=""/>
    <echo message=" Available targets are:"/>
    <echo message=""/>
    <echo message="   compile   --> compiles the source code"/>
    <echo message="   svgviewer --> runs the SVG viewer"/>
    <echo message="   javadoc   --> generates the API documentation"/>
    <echo message="   sitedoc   --> generates the site documentation"/>
    <echo message="   clean     --> cleans up the directory"/>
    <echo message=""/>
    <echo message=" See the comments in the build.xml file for more details."/>
    <echo message=""/>
    <echo message=""/>
  </target>


  <!-- Compilation ........................................................ -->
  <target name       ="compile"
          depends    ="init"
          description="Compiles the source files">
    <mkdir dir="${dest}"/>

    <javac srcdir="${src}" destdir="${dest}" deprecation="on">
      <classpath refid="libs-classpath"/>
      <exclude name="**/*.html"/>
    </javac>

    <copy file="${src}/org/w3c/flute/util/encoding.properties"
          todir="${dest}/org/w3c/flute/util"/>
  </target>

  <target name="clean-compile"
          depends="init"
          description="Cleans the files generated by compile">
    <delete dir="${dest}"/>
  </target>

  <!-- Applications ....................................................... -->
  <target name="svgviewer"
          depends="compile"
          description="Runs the SVG viewer">
    <java fork="yes"
          classname="${class-prefix}.apps.svgviewer.Main">
      <classpath>
        <path refid="libs-classpath"/>
        <pathelement location="resources" />
        <pathelement location="${dest}" />
      </classpath>
      <arg value="${args}"/>
    </java>
  </target>


  <!-- Documentation ...................................................... -->
  <target name="prepare-docs" depends="init">
    <mkdir dir="${docs}"/>
  </target>

  <target name="sitedoc" depends="prepare-docs">
    <mkdir dir="${site}"/>
    <copy file="${xdocs}/site-book.xml"
          tofile="${xdocs}/book.xml"
          filtering="on"/>
    <java classname="${stylebook-class}" fork="yes">
      <classpath refid="libs-classpath"/>
      <arg line="targetDirectory=${site} ${xdocs}/book.xml ${site-skin}"/>
    </java>
  </target>


  <!-- Cleans everything .................................................. -->
  <target name="clean"
          depends="clean-compile"
          description="Cleans everything"/>
</project>
