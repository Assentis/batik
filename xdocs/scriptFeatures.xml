<?xml version="1.0"?>
<!DOCTYPE document SYSTEM "./dtd/document-v10.dtd">

<!-- ========================================================================= -->
<!-- Copyright (C) The Apache Software Foundation. All rights reserved.        -->
<!--                                                                           -->
<!-- This software is published under the terms of the Apache Software License -->
<!-- version 1.1, a copy of which has been included with this distribution in  -->
<!-- the LICENSE file.                                                         -->
<!-- ========================================================================= -->

<!-- ========================================================================= -->
<!-- author shillion@ilog.fr                                                     -->
<!-- version $Id$ -->      
<!-- ========================================================================= -->
<document>
  <header>
    <title>Batik Scripting Features</title>
    <authors>
      <person name="Stephane Hillion" email="shillion@ilog.fr"/>
    </authors>
  </header>

  <body>
    <s1 title="Introduction">
      <p>
      This page lists the scripting features supported by Batik.
      The ECMAScript syntax is used.
      </p>
      <note>
      The features implemented in Batik are some of those found in all
      the most popular web browsers.
      </note>
    </s1>
    <s1 title="The window object">
      <p>
      The Batik internals can be accessed in script by using the
      <code>window</code> object.
      </p>
      <note>In the ECMAScript programs executed in an SVG document,
            the <code>window</code> object is the global object, so
            its properties and methods can be accessed as global
            variables and functions.</note>
      <p>
      It provides the following features:
      </p>
     
      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Property <code>document</code></td>
        </tr>
      </table>
      <p>
      The current SVG document.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Property <code>event</code> (or <code>evt</code>)</td>
        </tr>
      </table>
      <p>
      The last triggered event.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Property <code>window</code></td>
        </tr>
      </table>
      <p>
      An alias to the current global object.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>alert</code>(<em>message</em>)</td>
        </tr>
      </table>
      <p>
      Shows an alert dialog.
      </p>
      <ul>
        <li><em>message</em>: The string to display</li>
      </ul>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>confirm</code>(<em>question</em>)</td>
        </tr>
      </table>
      <p>
      Shows a confirm dialog with 'OK' and 'Cancel' buttons.
      </p>
      <ul>
        <li><em>question</em>: The string to display</li>
      </ul>
      <p>
      This method returns <code>true</code> if the user clicks on the
      'OK' button, <code>false</code> otherwise.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>prompt</code>(<em>message</em>[,
                                         <em>defaultValue</em>])</td>
        </tr>
      </table>
      <p>
      Shows an input dialog.
      </p>
      <ul>
        <li><em>message</em>: The string to display</li>
        <li><em>defaultValue</em>: The optional default value to set
            when the dialog first displays.</li>
      </ul>
      <p>
      This method returns the string value entered by the user, or null.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>setInterval</code>(<em>script</em>,
                                              <em>interval</em>)</td>
        
        </tr>
      </table>
      <p>
      Evaluates the given string repeatedly after the given amount of
      time.  This method does not stall the script: the evaluation is
      scheduled and the script continues its execution.
      </p>
      <ul>
        <li><em>script</em>: A string representing the script to evaluate.</li>
        <li><em>interval</em>: The interval in milliseconds.</li>
      </ul>
      <p>
      This method returns an object which can be used with
      <code>clearInterval</code>.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>setInterval</code>(<em>function</em>,
                                              <em>interval</em>)</td>
        
        </tr>
      </table>
      <p>
      Calls the given function repeatedly after the given amount of
      time.  This method does not stall the script: the evaluation is
      scheduled and the script continues its execution.
      </p>
      <ul>
        <li><em>function</em>: A function to call.</li>
        <li><em>interval</em>: The interval in milliseconds.</li>
      </ul>
      <p>
      This method returns an object which can be used with
      <code>clearInterval</code>.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>clearInterval</code>(<em>intervalID</em>)</td>
        
        </tr>
      </table>
      <p>
      Cancels an interval that was set by a call to <code>setInterval</code>.
      </p>
      <ul>
        <li><em>intervalID</em>: An object returned by a call to
            <code>setInterval</code>.</li>
      </ul>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>setTimeout</code>(<em>script</em>,
                                             <em>timeout</em>)</td>
        
        </tr>
      </table>
      <p>
      Evaluates the given string after the given amount of
      time.  This method does not stall the script: the evaluation is
      scheduled and the script continues its execution.
      </p>
      <ul>
        <li><em>script</em>: A string representing the script to evaluate.</li>
        <li><em>timeout</em>: The timeout in milliseconds.</li>
      </ul>
      <p>
      This method returns an object which can be used with
      <code>clearTimeout</code>.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>setTimeout</code>(<em>function</em>,
                                             <em>timeout</em>)</td>
        
        </tr>
      </table>
      <p>
      Calls the given function after the given amount of
      time.  This method does not stall the script: the evaluation is
      scheduled and the script continues its execution.
      </p>
      <ul>
        <li><em>function</em>: A function to call.</li>
        <li><em>timeout</em>: The timeout in milliseconds.</li>
      </ul>
      <p>
      This method returns an object which can be used with
      <code>clearTimeout</code>.
      </p>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>clearTimeout</code>(<em>timeoutID</em>)</td>
        
        </tr>
      </table>
      <p>
      Cancels a timeout that was set by a call to <code>setTimeout</code>.
      </p>
      <ul>
        <li><em>timeoutID</em>: An object returned by a call to
            <code>setTimeout</code>.</li>
      </ul>

      <!-- ========================================================= -->

      <table>
        <tr>
          <td>Method <code>parseXML</code>(<em>text</em>,
                                           <em>document</em>)</td>
        
        </tr>
      </table>
      <p>
      Parses and returns a DocumentFragment object.
      </p>
      <ul>
        <li><em>text</em>: A string representing an XML document fragment.</li>
        <li><em>document</em>: The document used to build the DOM
            representation of the XML fragment.</li>
      </ul>
      <p>
      This method returns a <code>org.w3c.dom.DocumentFragment</code> object.
      </p>

    </s1>
  </body>
</document>
