/*****************************************************************************
 * Copyright (C) The Apache Software Foundation. All rights reserved.        *
 * ------------------------------------------------------------------------- *
 * This software is published under the terms of the Apache Software License *
 * version 1.1, a copy of which has been included with this distribution in  *
 * the LICENSE file.                                                         *
 *****************************************************************************/

package org.apache.batik.refimpl.gvt;

import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;

import org.apache.batik.gvt.GraphicsNode;
import org.apache.batik.util.awt.geom.AffineTransformSource;

/**
 * Computes the <tt>AffineTransform</tt> based on the two sources
 * it combines.
 *
 * @author <a href="mailto:vincent.hardy@eng.sun.com">Vincent Hardy</a>
 * @version $Id$
 */

public class CompositeAffineTransformSource implements AffineTransformSource {
    private AffineTransformSource src1, src2;

    /**
     * @param src1 first source
     * @param src2 second source
     */
    public CompositeAffineTransformSource(AffineTransformSource src1,
                                          AffineTransformSource src2){
        if(src1 == null){
            throw new IllegalArgumentException();
        }

        if(src2 == null){
            throw new IllegalArgumentException();
        }

        this.src1 = src1;
        this.src2 = src2;
    }

    /**
     * @returns AffineTransform generated by this source
     */
    public AffineTransform getTransform(){
        AffineTransform txf1 = src1.getTransform();
        AffineTransform txf2 = src2.getTransform();
        txf1.concatenate(txf2);

        return txf1;
    }

    public Object clone(){
        return new CompositeAffineTransformSource(src1, src2);
    }
}

